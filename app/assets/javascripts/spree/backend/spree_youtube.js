var VideoManager;

VideoManager = (function() {
  VideoManager.prototype.options = {
    width: 600,
    youtube_match: /^.*((youtu.be\/)|(v\/)|(embed\/)|(watch\?))\??v?=?([^#\&\?]*).*/,
    baseFilePath: '',
    playerElementID: 'player_holder',
    originDomain: '',
    youtube_options: "<%= Rack::Utils::build_query(Spree::Videos::configuration.youtube_url_params) %>"
  };

  function VideoManager(holder, options) {
    var iframe;
    if (options == null) {
      options = {};
    }
    this.player_holder = $(holder);
    if (!!(iframe = $('iframe', this.player_holder).get(0))) {
      options.width = $(iframe).width();
    }
    this.options = $.extend(this.options, options);
  }

  VideoManager.prototype.switchVideo = function(youtube_link) {
    var matches, size, youtubeID, youtubeURL;
    size = this.calculateDimensions(true);
    matches = this.options.youtube_match.exec(youtube_link);
    youtubeID = matches ? matches[matches.length - 1] : youtube_link;
    youtubeURL = "http://www.youtube.com/embed/" + youtubeID + "?origin=" + this.options.originDomain + "&" + this.options.youtube_options;
    return this.player_holder.html('<iframe type="text/html" width="' + size.width + '" height="' + size.height + '" src="' + youtubeURL + '" frameborder="0"></iframe>');
  };

  VideoManager.prototype.calculateDimensions = function(isYouTube) {
    var h, w, yt;
    if (isYouTube == null) {
      isYouTube = true;
    }
    w = 'width' in this.options ? this.options.width : 0;
    h = 'height' in this.options ? this.options.width : 0;
    yt = isYouTube === true ? 30 : 0;
    if (!w) {
      w = (h - yt) * 16 / 9;
    }
    if (!h) {
      h = Math.round(w * (9 / 16) + yt);
    }
    return {
      width: w,
      height: h
    };
  };

  return VideoManager;

})();

$(function() {
  var vm;
  vm = new VideoManager("#video-player");
  return $('#video-thumbnails a').click(function(evn) {
    return vm.switchVideo($(this).data('video-id'));
  });
});

// ---
// generated by coffee-script 1.9.2